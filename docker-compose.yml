services:
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      # Load platform-specific environment variables
      - .env
    container_name: ${COMPOSE_PROJECT_NAME:-$(basename $(pwd))}-dev
    tty: true
    stdin_open: true
    restart: unless-stopped
    # Run as claudeuser (uid 1000) to access GVFS and have proper user experience
    user: '${DOCKER_USER:-1000:1000}'
    privileged: ${DOCKER_PRIVILEGED:-true}
    environment:
      # Pass all platform paths, container will choose the right ones
      NAS_DEV_ROOT_LINUX: ${NAS_DEV_ROOT_LINUX}
      NAS_DEV_ROOT_MAC: ${NAS_DEV_ROOT_MAC}
      HOST_HOME_LINUX: ${HOST_HOME_LINUX}
      HOST_HOME_MAC: ${HOST_HOME_MAC}
      HOST_RUN_USER_LINUX: ${HOST_RUN_USER_LINUX}
      HOST_RUN_USER_MAC: ${HOST_RUN_USER_MAC}
    volumes:
      # Mount current directory as /workspace (standard for dev containers)
      - .:/workspace:cached

      # Cross-platform NAS mounts
      # Mac: Direct volume mount
      - ${NAS_DEV_ROOT_MAC:-/tmp}:${NAS_DEV_ROOT_MAC:-/tmp}
      # Linux: Access via GVFS mount (available through /run/user mount below)

      # Platform-specific system mounts
      - ${HOST_HOME_LINUX:-/tmp}:${HOST_HOME_LINUX:-/tmp}
      - ${HOST_HOME_MAC:-/tmp}:${HOST_HOME_MAC:-/tmp}
      - ${HOST_RUN_USER_LINUX:-/tmp}:/run/user/1000:rshared
      # Optional: Share docker socket for docker-in-docker scenarios
      # - /var/run/docker.sock:/var/run/docker.sock
    ports:
      # Port range mapping - tries ports in order until finding a free one
      # Format: "host_range:container_port" - Docker uses first available port in range
      - "5173-5200:5173"   # Vite dev server - tries 5173, then 5174, 5175... until free
      - "24678-24700:24678" # Vite HMR websocket - tries 24678, then 24679... until free
      - "4173-4200:4173"   # Vite preview server - tries 4173, then 4174... until free
    working_dir: /workspace
